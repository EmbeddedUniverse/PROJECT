

Microchip Technology PIC18 LITE Macro Assembler V1.43 build -156212558 
                                                                                               Tue Nov 21 18:24:29 2017

Microchip Technology Omniscient Code Generator v1.43 (Free mode) build 201707250354
     1                           	processor	18F67J94
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    13  0000                     
    14                           ; Version 1.43
    15                           ; Generated 25/07/2017 GMT
    16                           ; 
    17                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F67J94 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _RPOR26_27	set	3615
    49  0000                     _RPINR0_1	set	3626
    50  0000                     _RCSTAbits	set	4011
    51  0000                     _PIR1bits	set	3998
    52  0000                     _RCREG1	set	4014
    53  0000                     _TXREG1	set	4013
    54  0000                     _INTCONbits	set	4082
    55  0000                     _RCONbits	set	4048
    56  0000                     _PIE1bits	set	3997
    57  0000                     _IPR1bits	set	3999
    58  0000                     _SPBRG1	set	4015
    59  0000                     _RCSTA1	set	4011
    60  0000                     _TXSTA1	set	4012
    61  0000                     _BAUDCON1	set	3943
    62                           
    63                           ; #config settings
    64  0000                     
    65                           	psect	cinit
    66  0000FA                     __pcinit:
    67                           	opt stack 0
    68  0000FA                     start_initialization:
    69                           	opt stack 0
    70  0000FA                     __initialization:
    71                           	opt stack 0
    72                           
    73                           ; Clear objects allocated to COMRAM (1 bytes)
    74  0000FA  6A15               	clrf	__pbssCOMRAM& (0+255),c
    75  0000FC                     end_of_initialization:
    76                           	opt stack 0
    77  0000FC                     __end_of__initialization:
    78                           	opt stack 0
    79  0000FC  9016               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    80  0000FE  9216               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    81  000100  0100               	movlb	0
    82  000102  EF5A  F000         	goto	_main	;jump to C main() function
    83                           
    84                           	psect	bssCOMRAM
    85  000015                     __pbssCOMRAM:
    86                           	opt stack 0
    87  000015                     _rxFlag:
    88                           	opt stack 0
    89  000015                     	ds	1
    90                           
    91                           	psect	cstackCOMRAM
    92  000001                     __pcstackCOMRAM:
    93                           	opt stack 0
    94  000001                     ??_rxIsr:
    95                           
    96                           ; 1 bytes @ 0x0
    97  000001                     	ds	18
    98  000013                     main@transferedData:
    99                           	opt stack 0
   100                           
   101                           ; 1 bytes @ 0x12
   102  000013                     	ds	1
   103  000014                     main@rxChar:
   104                           	opt stack 0
   105                           
   106                           ; 1 bytes @ 0x13
   107  000014                     	ds	1
   108                           
   109 ;;
   110 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   111 ;;
   112 ;; *************** function _main *****************
   113 ;; Defined at:
   114 ;;		line 26 in file "main.c"
   115 ;; Parameters:    Size  Location     Type
   116 ;;		None
   117 ;; Auto vars:     Size  Location     Type
   118 ;;  rxChar          1   19[COMRAM] unsigned char 
   119 ;;  transferedDa    1   18[COMRAM] unsigned char 
   120 ;; Return value:  Size  Location     Type
   121 ;;                  1    wreg      void 
   122 ;; Registers used:
   123 ;;		wreg, status,2
   124 ;; Tracked objects:
   125 ;;		On entry : 0/0
   126 ;;		On exit  : 0/0
   127 ;;		Unchanged: 0/0
   128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   130 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   132 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   133 ;;Total ram usage:        2 bytes
   134 ;; Hardware stack levels required when called:    1
   135 ;; This function calls:
   136 ;;		Nothing
   137 ;; This function is called by:
   138 ;;		Startup code after reset
   139 ;; This function uses a non-reentrant model
   140 ;;
   141                           
   142                           	psect	text0
   143  0000B4                     __ptext0:
   144                           	opt stack 0
   145  0000B4                     _main:
   146                           	opt stack 30
   147                           
   148                           ;main.c: 29: unsigned char rxChar = 0x00;
   149                           
   150                           ;incstack = 0
   151  0000B4  0E00               	movlw	0
   152  0000B6  6E14               	movwf	main@rxChar,c
   153                           
   154                           ;main.c: 30: unsigned char transferedData = 0x00;
   155  0000B8  0E00               	movlw	0
   156  0000BA  6E13               	movwf	main@transferedData,c
   157                           
   158                           ;main.c: 31: RPINR0_1 = 0b01100110;
   159  0000BC  0E66               	movlw	102
   160  0000BE  010E               	movlb	14	; () banked
   161  0000C0  6F2A               	movwf	42,b	;volatile
   162                           
   163                           ;main.c: 32: RPOR26_27 = 0b00010001;
   164  0000C2  0E11               	movlw	17
   165  0000C4  010E               	movlb	14	; () banked
   166  0000C6  6F1F               	movwf	31,b	;volatile
   167                           
   168                           ;main.c: 34: BAUDCON1 = 0x00;
   169  0000C8  0E00               	movlw	0
   170  0000CA  6E67               	movwf	3943,c	;volatile
   171                           
   172                           ;main.c: 35: TXSTA1 = 0x26;
   173  0000CC  0E26               	movlw	38
   174  0000CE  6EAC               	movwf	4012,c	;volatile
   175                           
   176                           ;main.c: 36: RCSTA1 = 0x90;
   177  0000D0  0E90               	movlw	144
   178  0000D2  6EAB               	movwf	4011,c	;volatile
   179                           
   180                           ;main.c: 37: SPBRG1 = 0xcf;
   181  0000D4  0ECF               	movlw	207
   182  0000D6  6EAF               	movwf	4015,c	;volatile
   183                           
   184                           ; BSR set to: 14
   185                           ;main.c: 40: IPR1bits.RC1IP = 0;
   186  0000D8  9A9F               	bcf	3999,5,c	;volatile
   187                           
   188                           ; BSR set to: 14
   189                           ;main.c: 41: PIE1bits.RC1IE = 1;
   190  0000DA  8A9D               	bsf	3997,5,c	;volatile
   191                           
   192                           ; BSR set to: 14
   193                           ;main.c: 42: RCONbits.IPEN = 1;
   194  0000DC  8ED0               	bsf	4048,7,c	;volatile
   195                           
   196                           ; BSR set to: 14
   197                           ;main.c: 43: INTCONbits.GIE = 1;
   198  0000DE  8EF2               	bsf	intcon,7,c	;volatile
   199                           
   200                           ; BSR set to: 14
   201                           ;main.c: 44: INTCONbits.PEIE = 1;
   202  0000E0  8CF2               	bsf	intcon,6,c	;volatile
   203                           
   204                           ;main.c: 48: TXREG1 = 0xAA;
   205  0000E2  0EAA               	movlw	170
   206  0000E4  6EAD               	movwf	4013,c	;volatile
   207  0000E6                     l35:
   208                           
   209                           ;main.c: 52: if(rxFlag){
   210  0000E6  5015               	movf	_rxFlag,w,c
   211  0000E8  B4D8               	btfsc	status,2,c
   212  0000EA  D7FD               	goto	l35
   213                           
   214                           ;main.c: 53: rxChar = RCREG1;
   215  0000EC  CFAE F014          	movff	4014,main@rxChar	;volatile
   216                           
   217                           ;main.c: 54: rxFlag = 0;
   218  0000F0  0E00               	movlw	0
   219  0000F2  6E15               	movwf	_rxFlag,c
   220                           
   221                           ;main.c: 55: PIE1bits.RC1IE = 1;
   222  0000F4  8A9D               	bsf	3997,5,c	;volatile
   223                           
   224                           ;main.c: 56: TXREG1 = 0xf0;
   225  0000F6  0EF0               	movlw	240
   226  0000F8  D7F5               	goto	L1
   227  0000FA                     __end_of_main:
   228                           	opt stack 0
   229                           intcon	equ	0xFF2
   230                           status	equ	0xFD8
   231                           
   232 ;; *************** function _rxIsr *****************
   233 ;; Defined at:
   234 ;;		line 62 in file "main.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;		None
   237 ;; Auto vars:     Size  Location     Type
   238 ;;		None
   239 ;; Return value:  Size  Location     Type
   240 ;;                  1    wreg      void 
   241 ;; Registers used:
   242 ;;		wreg, status,2
   243 ;; Tracked objects:
   244 ;;		On entry : 0/0
   245 ;;		On exit  : 0/0
   246 ;;		Unchanged: 0/0
   247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13
   248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   250 ;;      Temps:         18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   251 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
   252 ;;Total ram usage:       18 bytes
   253 ;; Hardware stack levels used:    1
   254 ;; This function calls:
   255 ;;		Nothing
   256 ;; This function is called by:
   257 ;;		Interrupt level 2
   258 ;; This function uses a non-reentrant model
   259 ;;
   260                           
   261                           	psect	intcode
   262  000008                     __pintcode:
   263                           	opt stack 0
   264  000008                     _rxIsr:
   265                           	opt stack 30
   266                           
   267                           ;incstack = 0
   268  000008  8216               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   269  00000A  CFFA F001          	movff	pclath,??_rxIsr
   270  00000E  CFFB F002          	movff	pclatu,??_rxIsr+1
   271  000012  CFE9 F003          	movff	fsr0l,??_rxIsr+2
   272  000016  CFEA F004          	movff	fsr0h,??_rxIsr+3
   273  00001A  CFE1 F005          	movff	fsr1l,??_rxIsr+4
   274  00001E  CFE2 F006          	movff	fsr1h,??_rxIsr+5
   275  000022  CFD9 F007          	movff	fsr2l,??_rxIsr+6
   276  000026  CFDA F008          	movff	fsr2h,??_rxIsr+7
   277  00002A  CFF3 F009          	movff	prodl,??_rxIsr+8
   278  00002E  CFF4 F00A          	movff	prodh,??_rxIsr+9
   279  000032  CFF6 F00B          	movff	tblptrl,??_rxIsr+10
   280  000036  CFF7 F00C          	movff	tblptrh,??_rxIsr+11
   281  00003A  CFF8 F00D          	movff	tblptru,??_rxIsr+12
   282  00003E  CFF5 F00E          	movff	tablat,??_rxIsr+13
   283  000042  C016  F00F         	movff	btemp,??_rxIsr+14
   284  000046  C017  F010         	movff	btemp+1,??_rxIsr+15
   285  00004A  C018  F011         	movff	btemp+2,??_rxIsr+16
   286  00004E  C019  F012         	movff	btemp+3,??_rxIsr+17
   287                           
   288                           ;main.c: 64: if(PIR1bits.RC1IF && PIE1bits.RC1IE) {
   289  000052  BA9E               	btfsc	3998,5,c	;volatile
   290  000054  AA9D               	btfss	3997,5,c	;volatile
   291  000056  D006               	goto	i2l48
   292                           
   293                           ;main.c: 65: if(RCSTAbits.FERR || RCSTAbits.OERR) {
   294  000058  A4AB               	btfss	4011,2,c	;volatile
   295  00005A  B2AB               	btfsc	4011,1,c	;volatile
   296  00005C  D003               	goto	i2l48
   297                           
   298                           ;main.c: 68: rxFlag = 1;
   299                           
   300                           ;main.c: 67: } else {
   301  00005E  0E01               	movlw	1
   302  000060  6E15               	movwf	_rxFlag,c
   303                           
   304                           ;main.c: 69: PIE1bits.RC1IE = 0;
   305  000062  9A9D               	bcf	3997,5,c	;volatile
   306  000064                     i2l48:
   307  000064  C012  F019         	movff	??_rxIsr+17,btemp+3
   308  000068  C011  F018         	movff	??_rxIsr+16,btemp+2
   309  00006C  C010  F017         	movff	??_rxIsr+15,btemp+1
   310  000070  C00F  F016         	movff	??_rxIsr+14,btemp
   311  000074  C00E  FFF5         	movff	??_rxIsr+13,tablat
   312  000078  C00D  FFF8         	movff	??_rxIsr+12,tblptru
   313  00007C  C00C  FFF7         	movff	??_rxIsr+11,tblptrh
   314  000080  C00B  FFF6         	movff	??_rxIsr+10,tblptrl
   315  000084  C00A  FFF4         	movff	??_rxIsr+9,prodh
   316  000088  C009  FFF3         	movff	??_rxIsr+8,prodl
   317  00008C  C008  FFDA         	movff	??_rxIsr+7,fsr2h
   318  000090  C007  FFD9         	movff	??_rxIsr+6,fsr2l
   319  000094  C006  FFE2         	movff	??_rxIsr+5,fsr1h
   320  000098  C005  FFE1         	movff	??_rxIsr+4,fsr1l
   321  00009C  C004  FFEA         	movff	??_rxIsr+3,fsr0h
   322  0000A0  C003  FFE9         	movff	??_rxIsr+2,fsr0l
   323  0000A4  C002  FFFB         	movff	??_rxIsr+1,pclatu
   324  0000A8  C001  FFFA         	movff	??_rxIsr,pclath
   325  0000AC  9216               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   326  0000AE  0011               	retfie		f
   327  0000B0                     __end_of_rxIsr:
   328                           	opt stack 0
   329  0000                     pclatu	equ	0xFFB
   330                           pclath	equ	0xFFA
   331                           tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           prodh	equ	0xFF4
   336                           prodl	equ	0xFF3
   337                           intcon	equ	0xFF2
   338                           fsr0h	equ	0xFEA
   339                           fsr0l	equ	0xFE9
   340                           fsr1h	equ	0xFE2
   341                           fsr1l	equ	0xFE1
   342                           fsr2h	equ	0xFDA
   343                           fsr2l	equ	0xFD9
   344                           status	equ	0xFD8
   345                           pclatu	equ	0xFFB
   346                           pclath	equ	0xFFA
   347                           tblptru	equ	0xFF8
   348                           tblptrh	equ	0xFF7
   349                           tblptrl	equ	0xFF6
   350                           tablat	equ	0xFF5
   351                           prodh	equ	0xFF4
   352                           prodl	equ	0xFF3
   353                           intcon	equ	0xFF2
   354                           fsr0h	equ	0xFEA
   355                           fsr0l	equ	0xFE9
   356                           fsr1h	equ	0xFE2
   357                           fsr1l	equ	0xFE1
   358                           fsr2h	equ	0xFDA
   359                           fsr2l	equ	0xFD9
   360                           status	equ	0xFD8
   361                           
   362                           	psect	rparam
   363  0000                     pclatu	equ	0xFFB
   364                           pclath	equ	0xFFA
   365                           tblptru	equ	0xFF8
   366                           tblptrh	equ	0xFF7
   367                           tblptrl	equ	0xFF6
   368                           tablat	equ	0xFF5
   369                           prodh	equ	0xFF4
   370                           prodl	equ	0xFF3
   371                           intcon	equ	0xFF2
   372                           fsr0h	equ	0xFEA
   373                           fsr0l	equ	0xFE9
   374                           fsr1h	equ	0xFE2
   375                           fsr1l	equ	0xFE1
   376                           fsr2h	equ	0xFDA
   377                           fsr2l	equ	0xFD9
   378                           status	equ	0xFD8
   379                           
   380                           	psect	temp
   381  000016                     btemp:
   382                           	opt stack 0
   383  000016                     	ds	1
   384  0000                     int$flags	set	btemp
   385  0000                     wtemp6	set	btemp+1
   386                           pclatu	equ	0xFFB
   387                           pclath	equ	0xFFA
   388                           tblptru	equ	0xFF8
   389                           tblptrh	equ	0xFF7
   390                           tblptrl	equ	0xFF6
   391                           tablat	equ	0xFF5
   392                           prodh	equ	0xFF4
   393                           prodl	equ	0xFF3
   394                           intcon	equ	0xFF2
   395                           fsr0h	equ	0xFEA
   396                           fsr0l	equ	0xFE9
   397                           fsr1h	equ	0xFE2
   398                           fsr1l	equ	0xFE1
   399                           fsr2h	equ	0xFDA
   400                           fsr2l	equ	0xFD9
   401                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     20      21
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          250      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _rxIsr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _rxIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rxIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rxIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rxIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rxIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rxIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _rxIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _rxIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _rxIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _rxIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _rxIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _rxIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _rxIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _rxIsr in BANK13

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _rxIsr                                               18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _rxIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             DF9      0       0      33        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK13           FA      0       0      31        0.0%
BANK13              FA      0       0      32        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     14      15       1       22.3%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      15       8        0.0%
DATA                 0      0      15       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.43 build -156212558 
Symbol Table                                                                                   Tue Nov 21 18:24:29 2017

                     l35 00E6                     i2l48 0064                     _main 00B4  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0016                     prodh 000FF4                     prodl 000FF3  
                   start 00B0             ___param_bank 000000                    ?_main 0001  
                  _rxIsr 0008                    pclath 000FFA                    tablat 000FF5  
                  status 000FD8                    wtemp6 0017          __initialization 00FA  
           __end_of_main 00FA                   ??_main 0013            __activetblptr 000000  
                 ?_rxIsr 0001                   _RCREG1 000FAE                   _RCSTA1 000FAB  
                 _SPBRG1 000FAF                   _TXREG1 000FAD                   _TXSTA1 000FAC  
         __CFG_XINST$OFF 000000                   _rxFlag 0015                   tblptrh 000FF7  
                 tblptrl 000FF6                   tblptru 000FF8               __accesstop 0060  
__end_of__initialization 00FC            ___rparam_used 000001           __pcstackCOMRAM 0001  
          __end_of_rxIsr 00B0                  ??_rxIsr 0001                  __Hparam 0000  
                __Lparam 0000                  __pcinit 00FA                  __ramtop 0E00  
                __ptext0 00B4     end_of_initialization 00FC                _RCSTAbits 000FAB  
              _RPOR26_27 000E1F               main@rxChar 0014      start_initialization 00FA  
     main@transferedData 0013              __pbssCOMRAM 0015                __pintcode 0008  
               _BAUDCON1 000F67           __size_of_rxIsr 00A8                 _IPR1bits 000F9F  
               _PIE1bits 000F9D                 _PIR1bits 000F9E                 _RCONbits 000FD0  
               _RPINR0_1 000E2A                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_main 0046                 int$flags 0016               _INTCONbits 000FF2  
               intlevel2 0000  
